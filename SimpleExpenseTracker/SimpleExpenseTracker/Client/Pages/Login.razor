@layout NoAuthLayout
@page "/login"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavManager

<EditForm Model="@user" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    
    <label for="email">Email</label>
    <InputText id="email" @bind-Value="user.Email" class="form-control form-control-user" placeholder="Enter Email Address..." />
    <ValidationMessage For="@(() => user.Email)"></ValidationMessage>

    <label for="password">Password</label>
    <InputText id="password" @bind-Value="user.Password" class="form-control form-control-user" placeholder="Password" />
    <ValidationMessage For="@(() => user.Password)"></ValidationMessage>

    <ValidationSummary />
    <button type="submit" class="btn btn-primary btn-user btn-block">
        Login
    </button>
</EditForm>

<a class="small" href="signup">Create an Account</a>

@code {
    private UserLoginDTO user = new UserLoginDTO();

    public async Task HandleLogin()
    {
        var result = await Http.PostAsJsonAsync("api/Auth/login", user);
        if (result.IsSuccessStatusCode)
        {
            string token = await result.Content.ReadAsStringAsync();
            await LocalStorage.SetItemAsStringAsync("token", token);
            await AuthStateProvider.GetAuthenticationStateAsync();
            NavManager.NavigateTo("Categories");
        }
    }
}
