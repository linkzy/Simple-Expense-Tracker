@page "/"
@inject HttpClient Http

<div class="row">
        <div class="col">
        <select class="form-control form-select" 
            @onchange="(ChangeEventArgs e) => { Month = Convert.ToInt32(e.Value.ToString());}">
                <option value="1">January</option>
                <option value="2">February</option>
                <option value="3">March</option>
                <option value="4">April</option>
                <option value="5">May</option>
                <option value="6">June</option>
                <option value="7">July</option>
                <option value="8">August</option>
                <option value="9">September</option>
                <option value="10">October</option>
                <option value="11">November</option>
                <option value="12">December</option>
            </select>
        </div>
        <div class="col">
            <input type="number" value="@DateTime.UtcNow.Year" @onchange="(ChangeEventArgs e) => { Year = Convert.ToInt32(e.Value.ToString());}" class="form-control"></input>
        </div>
</div>

@if (categories != null && categories.Count() > 0)
{
    <div class="row">
        @foreach(var category in categories)
        {
            <div class="col" @onclick="() => { Modal?.Open(category); }">
                <div class="card text-white bg-primary mb-3" style="max-width: 18rem;">
                  <div class="card-header">@category.Name</div>
                  <div class="card-body">
                        <i class="@category.CategoryIcon" aria-hidden="true"></i>
                        <hr />
                        Sum: @category.ActivitiesSum
                  </div>
                </div>
            </div>
        }
    </div>
    <SimpleExpenseTracker.Client.Pages.Expenses.ExpenseModal @ref="Modal" onClickAddActivity="AddNewActivity" />
}
else
{
    <p>You need to add a few categories before start using the app.</p>
    <a href="Categories/Manage" class="btn btn-info">Add Categories</a>
}


@code {
    private Expenses.ExpenseModal? Modal { get; set; }
    private List<CategoryDTO>? categories = new List<CategoryDTO>();

    private int Month = DateTime.Now.Month;
    private int Year = DateTime.Now.Year;

    protected async override Task OnInitializedAsync()
    {
        categories = await Http.GetFromJsonAsync<List<CategoryDTO>>("/api/Categories");
    }    

    public async Task AddNewActivity(ActivityDTO activity)
    {
        var result = await Http.PostAsJsonAsync<ActivityDTO>("/api/Activities", activity);
        if (result.IsSuccessStatusCode)
        {
            categories.First(x => x.Id == activity.CategoryId).ActivitiesSum += activity.Value;
            Modal?.Close();
            StateHasChanged();
        }
    }
}
